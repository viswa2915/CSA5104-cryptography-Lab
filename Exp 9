import numpy as np

def generate_playfair_matrix(key):
    key = "".join(sorted(set(key), key=key.index))
    alphabet = "ABCDEFGHIKLMNOPQRSTUVWXYZ"
    for c in key:
        alphabet = alphabet.replace(c, "")
    matrix = np.array(list(key + alphabet)).reshape(5, 5)
    return matrix

def find_position(matrix, letter):
    for i in range(5):
        for j in range(5):
            if matrix[i][j] == letter:
                return i, j

def decrypt_playfair(ciphertext, key):
    ciphertext = ciphertext.replace("J", "I").replace(" ", "")
    matrix = generate_playfair_matrix(key)
    plaintext = ""
    for i in range(0, len(ciphertext), 2):
        a, b = ciphertext[i], ciphertext[i + 1]
        r1, c1 = find_position(matrix, a)
        r2, c2 = find_position(matrix, b)
        if r1 == r2:
            plaintext += matrix[r1][(c1 - 1) % 5] + matrix[r2][(c2 - 1) % 5]
        elif c1 == c2:
            plaintext += matrix[(r1 - 1) % 5][c1] + matrix[(r2 - 1) % 5][c2]
        else:
            plaintext += matrix[r1][c2] + matrix[r2][c1]
    return plaintext

key = "PLAYFAIREXAMPLE"
cipher1 = "KXJEY UREBE ZWEHE WRYTU HEYFS KREHE GOYFI WTTTU OLKSY CAJPO"
cipher2 = "BOTEI ZONTX BYBNT GONEY CUZWR GDSON SXBOU YWRHE BAAHY USEDQ"

print("Decrypted Output 1:", decrypt_playfair(cipher1, key))
print("Decrypted Output 2:", decrypt_playfair(cipher2, key))
