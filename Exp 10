import numpy as np

def generate_playfair_matrix(custom_matrix):
    return np.array(custom_matrix).reshape(5, 5)

def find_position(matrix, letter):
    if letter == "J":
        letter = "I"
    for i in range(5):
        for j in range(5):
            if matrix[i][j] == letter:
                return i, j

def format_text(text):
    text = text.upper().replace("J", "I")
    text = "".join([c for c in text if c.isalpha()])
    formatted = ""
    i = 0
    while i < len(text):
        a = text[i]
        b = text[i + 1] if i + 1 < len(text) else "X"
        if a == b:
            formatted += a + "X"
            i += 1
        else:
            formatted += a + b
            i += 2
    if len(formatted) % 2 != 0:
        formatted += "X"
    return formatted

def encrypt_playfair(plaintext, matrix):
    plaintext = format_text(plaintext)
    ciphertext = ""
    for i in range(0, len(plaintext), 2):
        a, b = plaintext[i], plaintext[i + 1]
        r1, c1 = find_position(matrix, a)
        r2, c2 = find_position(matrix, b)
        if r1 == r2:
            ciphertext += matrix[r1][(c1 + 1) % 5] + matrix[r2][(c2 + 1) % 5]
        elif c1 == c2:
            ciphertext += matrix[(r1 + 1) % 5][c1] + matrix[(r2 + 1) % 5][c2]
        else:
            ciphertext += matrix[r1][c2] + matrix[r2][c1]
    return ciphertext

matrix = [
    "M","F","H","I","K",
    "U","N","O","P","Q",
    "Z","V","W","X","Y",
    "E","L","A","R","G",
    "D","S","T","B","C"
]

playfair_matrix = generate_playfair_matrix(matrix)

message1 = input("Enter text: ")
print("Output:", encrypt_playfair(message1, playfair_matrix))

message2 = input("Enter text: ")
print("Output:", encrypt_playfair(message2, playfair_matrix))
